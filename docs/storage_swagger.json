{
    "swagger": "2.0",
    "info": {
        "description": "Use any http client to fetch data from the 0G Storage Scan.\n\n## Common Error Messages\n### Response code and message\nAn API call that encounters an error will return non-zero as its response code. The error message will be returned in the message field and the detailed reason for the error will be returned in the data field.\n\n| Error code | Error message                                      |\n|:-----------|:---------------------------------------------------|\n| 0          | Success                                            |\n| 1          | Invalid parameter,see Data for detailed error.     |\n| 2          | Internal server error,see Data for detailed error. |\n| 3          | Too many requests,see Data for detailed error.     |\n\ne.g.\n```json\n{\n\"code\": 2,\n\"message\":\"Internal server error\",\n\"data\":\"No matching storage-submit record found, txSeq 1000000\"\n}\n```\n### Http status code\nTo distinguish backend service error and gateway error, we only use `200` and `600` as HTTP response status code:\n- 200: success, or known business error, e.g. entity not found.\n- 600: unexpected system error, e.g. database error, blockchain rpc error, io error.\n\n## Rate Limit\nHere are references for various API tiers and their rate limits.\n\n| API Tier\t   | Price            | \tRate Limit                           |\n|:------------|:-----------------|:-----------------------------------------|\n| Free\t       | $0               | 5 calls/second, up to 100,000 calls/day  |\n| Standard\t   | To be determined | 20 calls/second, up to 500,000 calls/day |\n| Enterprise  | To be determined | Customize on demand                      |\n\n",
        "title": "0G Storage Scan API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/accounts/{address}": {
            "get": {
                "description": "Query account information for specified account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account's information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The account address",
                        "name": "address",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.AccountInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/accounts/{address}/rewards": {
            "get": {
                "description": "Query storage rewards for specified account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account's storage reward list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The submitter address of the uploaded file",
                        "name": "address",
                        "in": "path"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.RewardList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/accounts/{address}/txs": {
            "get": {
                "description": "Query storage transactions for specified account, support root hash filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account's storage transaction list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The submitter address of the uploaded file",
                        "name": "address",
                        "in": "path"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The merkle root hash of the uploaded file",
                        "name": "rootHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The layer1 tx hash of the submission",
                        "name": "txHash",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.StorageTxList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/rewards": {
            "get": {
                "description": "Query storage rewards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reward"
                ],
                "summary": "Storage reward list",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.RewardList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/address": {
            "get": {
                "description": "Query hex40 address statistics, including incremental, active and full data, and support querying at hourly or daily time intervals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Address statistics",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 2000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "hour",
                            "day"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Statistics interval",
                        "name": "intervalType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort by timestamp",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.AddressStatList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/fee": {
            "get": {
                "description": "Query fee statistics, including incremental and full data, and support querying at hourly or daily time intervals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Storage fee statistics",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 2000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "hour",
                            "day"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Statistics interval",
                        "name": "intervalType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort by timestamp",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.FeeStatList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/layer1-tx": {
            "get": {
                "description": "Query transaction statistics, including incremental and full data, and support querying at hourly or daily time intervals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Layer1 transaction statistics",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 2000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "hour",
                            "day"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Statistics interval",
                        "name": "intervalType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort by timestamp",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.TxStatList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/miner": {
            "get": {
                "description": "Query miner statistics, including incremental, active and full data, and support querying at hourly or daily time intervals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Miner statistics",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 2000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "hour",
                            "day"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Statistics interval",
                        "name": "intervalType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort by timestamp",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.MinerStatList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/reward": {
            "get": {
                "description": "Query miner reward statistics, including incremental, active and full data, and support querying at hourly or daily time intervals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Miner statistics",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 2000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "hour",
                            "day"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Statistics interval",
                        "name": "intervalType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort by timestamp",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.RewardStatList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/storage": {
            "get": {
                "description": "Query data storage statistics, including incremental and full data, and support querying at hourly or daily time intervals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Data storage statistics",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 2000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "minTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "maxTimestamp",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "hour",
                            "day"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Statistics interval",
                        "name": "intervalType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort by timestamp",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.DataStatList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/summary": {
            "get": {
                "description": "Query statistics summary includes `storage fee` and `log sync height`",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Statistics summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.Summary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/top/data": {
            "get": {
                "description": "Query topn statistics of data size, including address and data size",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Topn statistics of data size",
                "parameters": [
                    {
                        "enum": [
                            "24h",
                            "3d",
                            "7d"
                        ],
                        "type": "string",
                        "default": "24h",
                        "description": "Statistics time span",
                        "name": "spanType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.DataTopnList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/top/fee": {
            "get": {
                "description": "Query topn statistics of storage fee, including address and storage fee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Topn statistics of storage fee",
                "parameters": [
                    {
                        "enum": [
                            "24h",
                            "3d",
                            "7d"
                        ],
                        "type": "string",
                        "default": "24h",
                        "description": "Statistics time span",
                        "name": "spanType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.FeeTopnList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/top/files": {
            "get": {
                "description": "Query topn statistics of files, including address and files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Topn statistics of files",
                "parameters": [
                    {
                        "enum": [
                            "24h",
                            "3d",
                            "7d"
                        ],
                        "type": "string",
                        "default": "24h",
                        "description": "Statistics time span",
                        "name": "spanType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.FilesTopnList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/top/reward": {
            "get": {
                "description": "Query topn statistics of reward, including address and reward amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Topn statistics of reward",
                "parameters": [
                    {
                        "enum": [
                            "24h",
                            "3d",
                            "7d"
                        ],
                        "type": "string",
                        "default": "24h",
                        "description": "Statistics time span",
                        "name": "spanType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.RewardTopnList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/stats/top/txs": {
            "get": {
                "description": "Query topn statistics of layer1 transactions, including address and transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistic"
                ],
                "summary": "Topn statistics of layer1 transactions",
                "parameters": [
                    {
                        "enum": [
                            "24h",
                            "3d",
                            "7d"
                        ],
                        "type": "string",
                        "default": "24h",
                        "description": "Statistics time span",
                        "name": "spanType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.TxsTopnList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/txs": {
            "get": {
                "description": "Query storage transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Storage transaction list",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "The number of skipped records, usually it's pageSize * (pageNumber - 1)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "The number of records displayed on the page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The merkle root hash of the uploaded file",
                        "name": "rootHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The layer1 tx hash of the submission",
                        "name": "txHash",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.StorageTxList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        },
        "/txs/{txSeq}": {
            "get": {
                "description": "Query storage transaction by txSeq",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Storage transaction information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "storage transaction sequence number",
                        "name": "txSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.BusinessError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/storage.StorageTxDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "600": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.BusinessError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "storage.AccountInfo": {
            "type": "object",
            "properties": {
                "dataSize": {
                    "description": "Total Size of storage data",
                    "type": "integer"
                },
                "files": {
                    "description": "Total number of files",
                    "type": "integer"
                },
                "rewards": {
                    "description": "Total amount of distributed rewards",
                    "type": "number"
                },
                "storageFee": {
                    "description": "Total storage fee",
                    "type": "number"
                },
                "txs": {
                    "description": "Total number of layer1 transaction",
                    "type": "integer"
                }
            }
        },
        "storage.AddressStat": {
            "description": "Hex40 stat data information",
            "type": "object",
            "properties": {
                "addressActive": {
                    "description": "Number of active hex40 in a specific time interval",
                    "type": "integer"
                },
                "addressNew": {
                    "description": "Number of newly increased hex40 in a specific time interval",
                    "type": "integer"
                },
                "addressTotal": {
                    "description": "Total number of hex40 by a certain time",
                    "type": "integer"
                },
                "statTime": {
                    "description": "Statistics time",
                    "type": "string"
                }
            }
        },
        "storage.AddressStatList": {
            "description": "Hex40 address stat list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.AddressStat"
                    }
                },
                "total": {
                    "description": "The total number of stat returned",
                    "type": "integer"
                }
            }
        },
        "storage.DataStat": {
            "description": "Storage data information",
            "type": "object",
            "properties": {
                "dataSize": {
                    "description": "Size of storage data in a specific time interval",
                    "type": "integer"
                },
                "dataTotal": {
                    "description": "Total Size of storage data by a certain time",
                    "type": "integer"
                },
                "fileCount": {
                    "description": "Number of files in a specific time interval",
                    "type": "integer"
                },
                "fileTotal": {
                    "description": "Total number of files by a certain time",
                    "type": "integer"
                },
                "statTime": {
                    "description": "Statistics time",
                    "type": "string"
                }
            }
        },
        "storage.DataStatList": {
            "description": "Storage data list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.DataStat"
                    }
                },
                "total": {
                    "description": "The total number of stat returned",
                    "type": "integer"
                }
            }
        },
        "storage.DataTopn": {
            "description": "Storage data size topn information",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address on blockchain",
                    "type": "string"
                },
                "dataSize": {
                    "description": "Size of storage data",
                    "type": "integer"
                }
            }
        },
        "storage.DataTopnList": {
            "description": "Topn list of data size",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Topn list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.DataTopn"
                    }
                }
            }
        },
        "storage.FeeStat": {
            "description": "Storage fee information",
            "type": "object",
            "properties": {
                "statTime": {
                    "description": "Statistics time",
                    "type": "string"
                },
                "storageFee": {
                    "description": "The base fee for storage in a specific time interval",
                    "type": "number"
                },
                "storageFeeTotal": {
                    "description": "The total base fee for storage by a certain time",
                    "type": "number"
                }
            }
        },
        "storage.FeeStatList": {
            "description": "Storage fee list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.FeeStat"
                    }
                },
                "total": {
                    "description": "The total number of stat returned",
                    "type": "integer"
                }
            }
        },
        "storage.FeeTopn": {
            "description": "Storage fee topn information",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address on blockchain",
                    "type": "string"
                },
                "storageFee": {
                    "description": "The total base fee for storage",
                    "type": "number"
                }
            }
        },
        "storage.FeeTopnList": {
            "description": "Topn list of storage fee",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Topn list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.FeeTopn"
                    }
                }
            }
        },
        "storage.FilesTopn": {
            "description": "Storage files topn information",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address on blockchain",
                    "type": "string"
                },
                "files": {
                    "description": "Number of files",
                    "type": "integer"
                }
            }
        },
        "storage.FilesTopnList": {
            "description": "Topn list of files",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Topn list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.FilesTopn"
                    }
                }
            }
        },
        "storage.LogSyncInfo": {
            "description": "Submit log sync information",
            "type": "object",
            "properties": {
                "layer1-logSyncHeight": {
                    "description": "Synchronization height of submit log on blockchain",
                    "type": "integer"
                },
                "logSyncHeight": {
                    "description": "Synchronization height of submit log on storage node",
                    "type": "integer"
                }
            }
        },
        "storage.MinerStat": {
            "description": "Miner stat data information",
            "type": "object",
            "properties": {
                "minerActive": {
                    "description": "Number of active miner in a specific time interval",
                    "type": "integer"
                },
                "minerNew": {
                    "description": "Number of newly increased miner in a specific time interval",
                    "type": "integer"
                },
                "minerTotal": {
                    "description": "Total number of miner by a certain time",
                    "type": "integer"
                },
                "statTime": {
                    "description": "Statistics time",
                    "type": "string"
                }
            }
        },
        "storage.MinerStatList": {
            "description": "Miner stat list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.MinerStat"
                    }
                },
                "total": {
                    "description": "The total number of stat returned",
                    "type": "integer"
                }
            }
        },
        "storage.Reward": {
            "description": "Reward information",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The reward amount",
                    "type": "number"
                },
                "blockNumber": {
                    "description": "The block where the reward event is emitted",
                    "type": "integer"
                },
                "miner": {
                    "description": "Miner address",
                    "type": "string"
                },
                "timestamp": {
                    "description": "The block time when reward event emits",
                    "type": "integer"
                },
                "txHash": {
                    "description": "The transaction where the reward event is emitted",
                    "type": "string"
                }
            }
        },
        "storage.RewardList": {
            "description": "Miner reward list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Miner reward list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Reward"
                    }
                },
                "total": {
                    "description": "The total number of miner reward returned",
                    "type": "integer"
                }
            }
        },
        "storage.RewardStat": {
            "description": "Miner reward stat data information",
            "type": "object",
            "properties": {
                "rewardNew": {
                    "description": "Newly increased miner reward in a specific time interval",
                    "type": "number"
                },
                "rewardTotal": {
                    "description": "Total miner reward by a certain time",
                    "type": "number"
                },
                "statTime": {
                    "description": "Statistics time",
                    "type": "string"
                }
            }
        },
        "storage.RewardStatList": {
            "description": "Miner reward stat list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.RewardStat"
                    }
                },
                "total": {
                    "description": "The total number of stat returned",
                    "type": "integer"
                }
            }
        },
        "storage.RewardTopn": {
            "description": "Reward topn information",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address on blockchain",
                    "type": "string"
                },
                "amount": {
                    "description": "Reward amount",
                    "type": "number"
                }
            }
        },
        "storage.RewardTopnList": {
            "description": "Topn list of files",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Topn list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.RewardTopn"
                    }
                }
            }
        },
        "storage.StorageFeeStat": {
            "description": "Stat storage fee information",
            "type": "object",
            "properties": {
                "chargeToken": {
                    "description": "Charge token info",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.TokenInfo"
                        }
                    ]
                },
                "storageFeeTotal": {
                    "description": "Total storage fee",
                    "type": "number"
                }
            }
        },
        "storage.StorageTxDetail": {
            "description": "Submission transaction information",
            "type": "object",
            "properties": {
                "blockNumber": {
                    "description": "The block where the submit event is emitted",
                    "type": "integer"
                },
                "dataSize": {
                    "description": "File size in bytes",
                    "type": "integer"
                },
                "endPosition": {
                    "description": "The ending position of the file stored in the storage node",
                    "type": "integer"
                },
                "expiration": {
                    "description": "Expiration date of the uploaded file",
                    "type": "integer"
                },
                "from": {
                    "description": "File uploader address",
                    "type": "string"
                },
                "gasFee": {
                    "description": "The gas fee of the transaction on layer1",
                    "type": "integer"
                },
                "gasLimit": {
                    "description": "The gas limit of the transaction on layer1",
                    "type": "integer"
                },
                "gasUsed": {
                    "description": "The gas used of the transaction on layer1",
                    "type": "integer"
                },
                "method": {
                    "description": "The name of the submit event is always `submit`",
                    "type": "string"
                },
                "rootHash": {
                    "description": "Merkle root of the file to upload",
                    "type": "string"
                },
                "segments": {
                    "description": "The total number of segments the file is split into",
                    "type": "integer"
                },
                "startPosition": {
                    "description": "The starting position of the file stored in the storage node",
                    "type": "integer"
                },
                "status": {
                    "description": "File upload status, 0-not uploaded,1-partial uploaded,2-uploaded,3-pruned",
                    "type": "integer"
                },
                "storageFee": {
                    "description": "The storage fee required to upload the file",
                    "type": "number"
                },
                "timestamp": {
                    "description": "The block time when submit event emits",
                    "type": "integer"
                },
                "txHash": {
                    "description": "The transaction where the submit event is emitted",
                    "type": "string"
                },
                "txSeq": {
                    "description": "Submission index in submit event",
                    "type": "string"
                },
                "uploadedSegments": {
                    "description": "The number of segments the file has been uploaded",
                    "type": "integer"
                }
            }
        },
        "storage.StorageTxInfo": {
            "description": "Submission transaction information",
            "type": "object",
            "properties": {
                "blockNumber": {
                    "description": "The block where the submit event is emitted",
                    "type": "integer"
                },
                "dataSize": {
                    "description": "File size in bytes",
                    "type": "integer"
                },
                "from": {
                    "description": "File uploader address",
                    "type": "string"
                },
                "method": {
                    "description": "The name of the submit event is always `submit`",
                    "type": "string"
                },
                "rootHash": {
                    "description": "Merkle root of the file to upload",
                    "type": "string"
                },
                "segments": {
                    "description": "The total number of segments the file is split into",
                    "type": "integer"
                },
                "status": {
                    "description": "File upload status, 0-not uploaded,1-partial uploaded,2-uploaded,3-pruned",
                    "type": "integer"
                },
                "storageFee": {
                    "description": "The storage fee required to upload the file",
                    "type": "number"
                },
                "timestamp": {
                    "description": "The block time when submit event emits",
                    "type": "integer"
                },
                "txHash": {
                    "description": "The transaction where the submit event is emitted",
                    "type": "string"
                },
                "txSeq": {
                    "description": "Submission index in submit event",
                    "type": "integer"
                },
                "uploadedSegments": {
                    "description": "The number of segments the file has been uploaded",
                    "type": "integer"
                }
            }
        },
        "storage.StorageTxList": {
            "description": "Submission information list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Submission list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.StorageTxInfo"
                    }
                },
                "total": {
                    "description": "The total number of submission returned",
                    "type": "integer"
                }
            }
        },
        "storage.Summary": {
            "description": "Storage summary information",
            "type": "object",
            "properties": {
                "logSync": {
                    "description": "Synchronization information of submit event",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.LogSyncInfo"
                        }
                    ]
                },
                "storageFee": {
                    "description": "Storage fee information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.StorageFeeStat"
                        }
                    ]
                }
            }
        },
        "storage.TokenInfo": {
            "description": "Charge token information",
            "type": "object",
            "properties": {
                "address": {
                    "description": "The address of the token contract",
                    "type": "string"
                },
                "decimals": {
                    "description": "Token decimals",
                    "type": "integer"
                },
                "name": {
                    "description": "Token name",
                    "type": "string"
                },
                "native": {
                    "description": "True is native token, otherwise is not",
                    "type": "boolean"
                },
                "symbol": {
                    "description": "Token symbol",
                    "type": "string"
                }
            }
        },
        "storage.TxStat": {
            "description": "Storage transaction information",
            "type": "object",
            "properties": {
                "statTime": {
                    "description": "Statistics time",
                    "type": "string"
                },
                "txCount": {
                    "description": "Number of layer1 transaction in a specific time interval",
                    "type": "integer"
                },
                "txTotal": {
                    "description": "Total number of layer1 transaction by a certain time",
                    "type": "integer"
                }
            }
        },
        "storage.TxStatList": {
            "description": "Storage transaction list",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.TxStat"
                    }
                },
                "total": {
                    "description": "The total number of stat returned",
                    "type": "integer"
                }
            }
        },
        "storage.TxsTopn": {
            "description": "Storage transaction topn information",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address on blockchain",
                    "type": "string"
                },
                "txs": {
                    "description": "Number of layer1 transaction",
                    "type": "integer"
                }
            }
        },
        "storage.TxsTopnList": {
            "description": "Topn list of layer1 transactions",
            "type": "object",
            "properties": {
                "list": {
                    "description": "Topn list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.TxsTopn"
                    }
                }
            }
        }
    }
}